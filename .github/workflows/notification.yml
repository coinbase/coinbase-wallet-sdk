name: Slack notifications for PRs and Issues

on:
  pull_request:
    types: [opened, reopened]
  issues:
    types: [opened, reopened]

env:
  CHANNEL_WALLET_FEEDBACK: ${{ vars.CHANNEL_WALLET_FEEDBACK }}
  CHANNEL_WALLET_SQUAD_BUILD: ${{ vars.CHANNEL_WALLET_SQUAD_BUILD }}
  ON_CALL_WALLET: ${{ vars.ON_CALL_WALLET }}
  ON_CALL_BUILD_SQUAD: ${{ vars.ON_CALL_BUILD_SQUAD }}

jobs:
  checks:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ env.skip }}
    steps:
    - name: Check spam labels
      if: ${{ contains(github.event.*.labels.*.name, 'spam') }}
      run: |
        echo "skip=true" >> $GITHUB_ENV
        echo "::error:: Spam label found."
    - name: Check write permission
      run: |
        permission=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/$REPO/collaborators/$USER/permission | jq -r '.permission')
        if [ "$permission" != "admin" ] && [ "$permission" != "write" ]; then
          echo "::notice:: User $USER has $permission permission."
          exit 0
        fi
        echo "skip=true" >> $GITHUB_ENV
        echo "::error:: User $USER has $permission permission. No slack alert required."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}
        USER: ${{ github.actor }}

  parse-event-details:
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ vars.SLACK_ENABLED == 'true' && needs.checks.outputs.skip != 'true' }}
    outputs:
      event: ${{ env.event }}
      title: ${{ env.title }}
      url: ${{ env.url }}
      author: ${{ env.author }}
    steps:
    - name: Set pull request details
      if: ${{ github.event_name == 'pull_request' }}
      env:
        title: ${{ github.event.pull_request.title }}
      run: |
        echo "event=PR ${{ github.event.action }}" >> $GITHUB_ENV
        echo "title=${{ env.title }}" >> $GITHUB_ENV
        echo "url=${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV
        echo "author=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV        

    - name: Set issue details
      if: ${{ github.event_name == 'issues' }}
      env:
        title: ${{ github.event.issue.title }}
      run: |
        echo "event=Issue ${{ github.event.action }}" >> $GITHUB_ENV
        echo "title=${{ env.title }}" >> $GITHUB_ENV
        echo "url=${{ github.event.issue.html_url }}" >> $GITHUB_ENV
        echo "author=${{ github.event.issue.user.login }}" >> $GITHUB_ENV
        
  notify:
    runs-on: ubuntu-latest
    needs: parse-event-details
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set channel and mention
      run: |
        if ${{ contains(join(github.event.issue.labels.*.name), 'type:') }}; then
          echo "channel=${{ env.CHANNEL_WALLET_FEEDBACK }}" >> $GITHUB_ENV
          echo "mention=!subteam^${{ env.ON_CALL_WALLET }}" >> $GITHUB_ENV
        else
          echo "channel=${{ env.CHANNEL_WALLET_SQUAD_BUILD }}" >> $GITHUB_ENV
          echo "mention=!subteam^${{ env.ON_CALL_BUILD_SQUAD }}" >> $GITHUB_ENV
        fi

    - name: Set text
      run: |
        text=$(echo "${{ vars.SLACK_TEMPLATE }}")
        text=${text//'{{event}}'/${{ needs.parse-event-details.outputs.event }}}
        text=${text//'{{title}}'/${{ needs.parse-event-details.outputs.title }}}
        text=${text//'{{url}}'/${{ needs.parse-event-details.outputs.url }}}
        text=${text//'{{author}}'/${{ needs.parse-event-details.outputs.author }}}
        text=${text//'{{mention}}'/${{ env.mention }}}
        text=${text//'{{repo}}'/${{ github.repository }}}
        text="${text//$'\r\n'/'\n'}"
        text="${text//$'\n'/'\n'}"
        echo "text=$text" >> $GITHUB_ENV

    - name: Notify Slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "channel": "#${{ env.channel }}",
            "text": "${{ env.text }}",
            "icon_emoji": ":${{ vars.ICON_EMOJI }}:"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
